#!/usr/bin/env php
<?php

include($_composer_autoload_path ?? __DIR__ . '/../vendor/autoload.php');

use Ruigweb\Commander\Coordinator;

if (empty($argv)) {
    $argv = [];
}

// No need to know the file location
array_shift($argv);

// Try to build the coordinator
// Three possible scenarios to do so
// - Defining a env variable COMMANDER_REGISTER which locates to a file to require
// - Create commander.php which is located in the app source path to require
// - Building a new coordinator, based on the env variable COMMANDER_COORDINATOR,
// which is registered somewhere before this file is loaded / required
$coordinator = null;
$app_path = $_SERVER['APP_PATH'] ?? null;
if (empty($app_path) && mb_strpos(__DIR__, '/vendor') !== false) {
    // Define app path
    $app_path = strstr(__DIR__, '/vendor', true);
};

if (!empty($_SERVER['COMMANDER_REGISTER'])) {
    assert(file_exists($_SERVER['COMMANDER_REGISTER']));
    $coordinator = require_once($_SERVER['COMMANDER_REGISTER']);
} elseif (!empty($_SERVER['APP_PATH']) && is_file($_SERVER['APP_PATH'].'/commander.php')) {
    $coordinator = require_once($_SERVER['APP_PATH'].'/commander.php');
}

if ($coordinator instanceof Coordinator === false) {
    $commands = [];
    if (is_array($coordinator)) {
        $commands = $coordinator;
    }

    $coordinator = new Coordinator($_SERVER['COMMANDER_COORDINATOR'] ?? Coordinator::DEFAULT);
    if (count($commands) > 0) {
        $coordinator->register(...$commands);
    }
}

$command = $coordinator->ingest($argv);
if ($command) {
    $result  = $command->run();
}
